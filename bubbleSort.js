// როცა გვინდა შიდა იტერაცია იყოს თავიდან მასივის სიგრძეზე ერთით ნაკლები, შემდეგ კი მუდმივად 1-ით მცირდებოდეს, ამ დროს გარეთა ლუფი შეგვიძლია
// უკნიდან დავატრიალოთ, რათა ავიღოთ საწყისად მასივის სიგრძე, ინდექსი კი მუდმივად მცირდებოდეს, შიდა ლუპი კი მუდმივად იყოს ერთით ნაკლები ამ შემცირებად ინდექსზე.
// ბაბლ სორტის დროს გვჭირდება ორი ლუფი. პირველით განვსაზღვრავთ შედარებების რაოდენობას მთლიანად(მთლიან რაუნდს), მეორეთი კიდევ ერთ მიმდევრობით შედარებას.
// თითოეული მიმდევრობის დასრულებისას, ბოლოში აღმოჩნდება უდიდესი რიცხვი.
function bubbleSort(arr) {
  let noSwap;
  for (let i = arr.length - 1; i >= 0; i--) {
    noSwap = true;
    for (let j = 0; j <= i - 1; j++) {
      if (arr[j] > arr[j + 1]) {
        noSwap = false;
        [([arr[j], arr[j + 1]] = [arr[j + 1], arr[j]])];
      }
      console.log(arr, arr[j], arr[j + 1]);
    }
    if (noSwap) break;
  }
  return arr;
}
